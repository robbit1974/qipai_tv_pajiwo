---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2019/7/18 10:00
---
---  注意 "m" 为麻将的首字母,建议写成变量
------------个人手牌所有操作都在这里,这个脚本建议将 吃碰杠,下炮这些操作拆分出来 可以减少此脚本一半的代码量,现在维护困难
--MyHandCard 此处简单实现,建议加上出牌动画
MyHandCard={}
local this=MyHandCard
--手牌按钮
this.HandBtnTable={}
--操作表
this.OptionsTable={}
--下跑表
this.xiaPaoTable={}
--手牌名字,里面保存的是数字
this.HandSpriteName={}
--鬼牌
this.GuiPai=nil
--手牌action
this.HandAction={}
--手牌按钮索引
this.Index=1
--所有手牌数量
this.AllChildNum=14
--打出手牌的深度值
this.Depth=1
--
this.pengdisabledByHigherPriorityAction=false
this.gangdisabledByHigherPriorityAction=false
this.hudisabledByHigherPriorityAction=false
this.quxiaodisabledByHigherPriorityAction=false
this.pengid=nil
this.gangid=nil
this.huid=nil
this.quxiaoid=nil
this.pengName=nil
this.gangName=nil
this.huName=nil
this.quxiaoName=nil

this.PengPlayerId=nil
this.GangPlayerId=nil
--是否下炮
this.isxiaPao=false
--15秒不选择自动选择过
local XiaPaoUpdateHandle=nil

local time=0

--个人状态
this.State={
    none=0,
    mo=1,
    peng=2,
    gang=3,
    da=4,
}
this.CurrentState=this.State.none

this.ChuObj=nil

--是否是在设置
this.isSetting=false
--是否托管
this.isTuoGuan=false
-------------------------------手牌表----------------------------------------------
function MyHandCard.CreateTable()

    this.Setting=ButtonBase:New(GamePanel.SheZhi)
    this.TuoGuan=ButtonBase:New(GamePanel.tuoguan)
    this.tuichu=ButtonBase:New(GamePanel.tuichu)
    this.CancleTuoGuan=ButtonBase:New(GamePanel.CancleTuoGuanBtn)

    this.HandBtnTable={}
    this.Index=1
    for i=1,14,1 do
        local HandBtn=ButtonBase:New(GamePanel.MHand:GetChild(i-1))
        HandBtn.isReverse=false
        HandBtn.PoolName=GameCtrl.MyMaJiangPoolName
        --左侧函数
        HandBtn.leftFunc=this.SetLeft
        HandBtn.up=this.Setting
        HandBtn.upFunc=function()
            this.isSetting=true
        end
        --右侧函数
        HandBtn.rightFunc=this.SetRight
        HandBtn.okFunc=this.Okfunc
        --图片赋值
        HandBtn.SetSprite=function(HandBtn,spriteName,depth)
            HandBtn.gameObject:SetActive(true)
            local sp=HandBtn.gameObject.transform:Find("ShowInfo"):GetComponent("UISprite")
            sp.spriteName=spriteName
            sp.depth=depth
        end
        table.insert(this.HandBtnTable,HandBtn)
    end

    this.Setting.down=this.TuoGuan
    this.TuoGuan.up=this.Setting
    this.TuoGuan.down=this.tuichu
    this.tuichu.up=this.TuoGuan
    this.tuichu.downFunc=function()
        this.tuichu:SetEnd()
        this.isSetting=false
        this.SetFirst()
    end
    this.Setting.okFunc=function()
        CtrlManager.GetCtrl(CtrlNames.Setting).Awake()
    end
    this.tuichu.okFunc=function()
        CtrlManager.GetCtrl(CtrlNames.Message).QuitGame()
    end
    this.TuoGuan.okFunc=function()
        this.isTuoGuan=true
        GamePanel.TuoGuanBg.gameObject:SetActive(true)
        this.CancleTuoGuan:SetStart()
    end
    this.CancleTuoGuan.startFunc=function()
        this.CancleTuoGuan.gameObject:GetComponent("UISprite").color=Color.New(1,1,1,1)
    end
    this.CancleTuoGuan.okFunc=function()
        this.isTuoGuan=false
        this.CancleTuoGuan:SetEnd()
        GamePanel.TuoGuanBg.gameObject:SetActive(false)
        this.isSetting=false
        this.SetFirst()
    end
end
--右侧
function MyHandCard.SetRight()
    if this.Index>=this.AllChildNum or not this.HandBtnTable[this.Index+1].gameObject.activeSelf then
        return nil
    end
    --结束当前按钮的高亮
    this.HandBtnTable[this.Index]:SetEnd()
    --表中的下一个按钮为开始按钮
    this.Index=this.Index+1
    --设置按钮高亮
    this.HandBtnTable[this.Index]:SetStart()
end
--左侧
function MyHandCard.SetLeft()
    if this.Index<=1 or not this.HandBtnTable[this.Index-1].gameObject.activeSelf then
        return nil
    end
    --结束当前按钮的高亮
    this.HandBtnTable[this.Index]:SetEnd()
    --表中的下一个按钮为开始按钮
    this.Index=this.Index-1
    --设置按钮高亮
    this.HandBtnTable[this.Index]:SetStart()
end
--设置okfunc
function MyHandCard.Okfunc(selfBtn)
    --代表此时可以出牌
    if this.CurrentState==this.State.da then
        this.DaPai(selfBtn.gameObject.transform:Find("ShowInfo"):GetComponent("UISprite").spriteName)
    end
end
--设置第一个高亮
function MyHandCard.SetFirst()
    if this.isSetting then
        return nil
    end
    if currentGameType==GameProcess.GamePlaying then
        for i,v in pairs(this.HandBtnTable) do
            v:SetEnd()
        end
        --如果摸牌,则摸牌为亮牌
        if this.HandBtnTable[14].gameObject.gameObject.activeSelf then
            this.HandBtnTable[14]:SetStart()
            this.Index=14
        else--否则第一个为亮牌
            for i,v in pairs(this.HandBtnTable) do
                if  v.gameObject.gameObject.activeSelf then
                    this.Index=i
                    v:SetStart()
                    break
                end
            end
        end
    elseif currentGameType==GameProcess.GameCaoZuo then
        this.OptionsTable[1]:SetStart()
    elseif currentGameType==GameProcess.Game then
        GameCtrl.RerurnDaTingBtn:SetStart()
    elseif currentGameType==GameProcess.GameHu then

    end
end
--手牌赋值
function MyHandCard.SetSprite(HandTable)
    --排序,通过数字可以尽快排序
    table.sort(HandTable)
    --显示手牌
    GamePanel.MHand.gameObject:SetActive(true)
    --根据手牌数量显示手牌
    for i = 1, 13,1 do
        if i<=13-#HandTable then
            this.HandBtnTable[i].gameObject:SetActive(false)
        else
            this.HandBtnTable[i].gameObject:SetActive(true)
            if HandTable[#HandTable+i-13]==0 then
                this.HandBtnTable[i]:SetSprite("m"..this.GuiPai,i+1)
                this.HandBtnTable[i].gameObject.transform:Find("Cai").gameObject:SetActive(true)
            else
                this.HandBtnTable[i]:SetSprite("m"..GetNameByNum[ HandTable[#HandTable+i-13]],i+1)
                this.HandBtnTable[i].gameObject.transform:Find("Cai").gameObject:SetActive(false)
            end
        end
    end
end
----------------------------------------------------------------end-------------------------------------------------
--通过panforme将信息保存在表中
function MyHandCard.GetInfo(data,guiPai)
    --创建表
    this.CreateTable()
    this.HandSpriteName={}
    this.HandAction={}
    --赋值鬼牌
    if #guiPai>0 then
        print(guiPai[1])
        this.GuiPai=guiPai[1]
    end
    --用数字表示普通手牌
    for i,v in pairs(data.fangruShoupaiList.putongShoupaiList) do
        table.insert(this.HandSpriteName,PokerWeight[v])
    end
    --用数字表示鬼牌
    for i,v in pairs(data.fangruShoupaiList.guipaiShoupaiList) do
        table.insert(this.HandSpriteName,PokerWeight["GuiPai"])
    end
    --此处顺序不能乱
    --显示手牌
    this.SetSprite(this.HandSpriteName)
    --保存行牌动作的id值,打牌需要发送对应的id,每次都不同,每次都需要重新保存
    for i,v in pairs(data.gangmoShoupai) do
        this.MoPai("m"..v)
    end
    --for i,v in pairs(data.actionCandidates) do
    --    if  v.type=="da" then
    --        this.CurrentState=this.State.da
    --        this.HandAction["m"..v.pai]=v.id
    --    end
    --end
    this.HandToAction(data.actionCandidates)
    if not this.isxiaPao then
        this.SetFirst()
    end
    --回收对象池
    this.HuiShouDaChu()
    this.HuiShouChiPeng()
    --显示出牌
    for i,v in pairs(data.dachupaiList) do
        this.ShowDaChuCard("m"..v)
    end
    --显示碰牌
    for i,v in pairs(data.pengchupaiZuList) do
        this.ShowPeng("m"..v)
    end
    --显示杠牌
    for i,v in pairs(data.gangchupaiZuList) do
        this.ShowGang("m"..v)
    end
end
---------------------------------------------------摸,吃,碰,杠----------------------------------------------------
--摸牌
function MyHandCard.MoPai(data)
    --this.CurrentState=this.State.mo
    if data=="m"..this.GuiPai then
        this.HandBtnTable[14].gameObject.transform:Find("Cai").gameObject:SetActive(true)
    else
        this.HandBtnTable[14].gameObject.transform:Find("Cai").gameObject:SetActive(false)
    end
    this.HandBtnTable[14]:SetSprite(data,14)
    --将摸到的牌加入到手牌中
    table.insert(this.HandSpriteName,this.NameNum(data))
    GameCtrl.UpdateShengYuCount()
    --this.SetFirst()
end
--碰
function MyHandCard.peng(data,Id,Playerid)
    data="m"..data
    this.CurrentState=this.State.peng
    this.InitCenterOptions()
    this.ActionUrl(Id)
    if this.pengdisabledByHigherPriorityAction then
        return nil
    end
    --todo显示碰的动画
    GamePanel.MoAnimation:PlayAnimationByName("peng")
    --移除这张手牌,通过数字移除,所有的手牌通过数字获得
    local num=this.NameNum(data)
    local index=0
    for i=#this.HandSpriteName,1,-1 do
        if this.HandSpriteName[i]==num then
            table.remove(this.HandSpriteName,i)
            index=index+1
        end
        if index>=2 then
            break
        end
    end
    --重新赋值
    this.SetSprite(this.HandSpriteName)
    this.ShowPeng(data)
    StartGame.HuiShowChu(Playerid)
end
--杠
function MyHandCard.gang(data,id,playerId)
    data="m"..data
    this.InitCenterOptions()
    this.ActionUrl(id)
    if this.pengdisabledByHigherPriorityAction then
        return nil
    end
    GamePanel.MoAnimation:PlayAnimationByName("gang")
    local num=this.NameNum(data)
    for i=#this.HandSpriteName,1,-1 do
        if this.HandSpriteName[i]==num then
            table.remove(this.HandSpriteName,i)
        end
    end
    this.SetSprite(this.HandSpriteName)
    this.ShowGang(data)
    if playerId then
        StartGame.HuiShowChu(playerId)
    end
end
--todo 胡
function MyHandCard.hu(id)
    this.InitCenterOptions()
    this.ActionUrl(id)
    if this.pengdisabledByHigherPriorityAction then
        return nil
    end
    GamePanel.MoAnimation:PlayAnimationByName("hu")
end
--todo 取消
function MyHandCard.Cancle(id)
    this.InitCenterOptions()
    this.ActionUrl(id)
end
--todo 打牌
function MyHandCard.DaPai(data)
    --清除状态
    this.CurrentState=this.State.none
    --得到移除的卡牌数字
    local num=this.NameNum(data)
    --移除这张手牌,通过数字移除,所有的手牌通过数字获得
    for i,v in pairs(this.HandSpriteName) do
        if v==num then
            table.remove(this.HandSpriteName,i)
            break
        end
    end
    this.HandBtnTable[14].gameObject:SetActive(false)
    --重新赋值,注意理解这个函数,,多想想,这个函数很重要
    this.SetSprite(this.HandSpriteName)
    --显示动画
    this.ShowAnimation(data)
    --发送打牌协议
    this.DaPaiUrl(data)
    this.SetFirst()
end

--显示出牌
function  MyHandCard.ShowDaChuCard(data)
    local obj= BaseHelper.SetObj(GameCtrl.DaChuPaiPoolName,GamePanel.MChu,nil,nil)
    this.ChuObj=obj
    obj.transform.localRotation=UnityEngine.Quaternion.Euler(0,0,0)
    obj:GetComponent("UISprite").depth=this.Depth+1
    obj.transform:Find("Sprite"):GetComponent("UISprite").spriteName=data
    obj.transform:Find("Sprite"):GetComponent("UISprite").depth=this.Depth+2
    this.Depth=this.Depth+2
    GamePanel.MChu:GetComponent("UIGrid"):Reposition()
end
--回收出的牌
function MyHandCard.HuiShouPai()
    objPoolMgr:Release(GameCtrl.DaChuPaiPoolName,this.ChuObj)
end
--显示碰
function  MyHandCard.ShowPeng(data)
    local obj=objPoolMgr:Get(GameCtrl.MyPengPoolName)
    --obj.transform.localScale=Vector3.zero
    obj.transform:SetParent(GamePanel.MPeng)
    obj.transform:GetChild(3).gameObject:SetActive(false)
    obj.transform:GetChild(0):GetChild(0):GetComponent("UISprite").spriteName=data
    obj.transform:GetChild(1):GetChild(0):GetComponent("UISprite").spriteName=data
    obj.transform:GetChild(2):GetChild(0):GetComponent("UISprite").spriteName=data
    GamePanel.MPeng:GetComponent("UIGrid"):Reposition()
end

function MyHandCard.ShowGang(data)
    for i=1, GamePanel.MPeng.transform.childCount,1 do
        local obj=GamePanel.MPeng.transform:GetChild(i-1)
        if obj:GetChild(0):GetChild(0):GetComponent("UISprite").spriteName==data then
            obj.transform:GetChild(3):GetChild(0):GetComponent("UISprite").spriteName=data
            obj.transform:GetChild(3).gameObject:SetActive(true)
            return nil
        end
    end
    local obj=objPoolMgr:Get(GameCtrl.MyPengPoolName)
    obj.transform:SetParent(GamePanel.MPeng)
    obj.transform:GetChild(0):GetChild(0):GetComponent("UISprite").spriteName=data
    obj.transform:GetChild(1):GetChild(0):GetComponent("UISprite").spriteName=data
    obj.transform:GetChild(2):GetChild(0):GetComponent("UISprite").spriteName=data
    obj.transform:GetChild(3):GetChild(0):GetComponent("UISprite").spriteName=data
    obj.transform:GetChild(3).gameObject:SetActive(true)
    GamePanel.MPeng:GetComponent("UIGrid"):Reposition()
end
----------------------------------------end-------------------------------------------------------------------------------
--通过名字获得数字
function MyHandCard.NameNum(data)
    if data=="m"..this.GuiPai then
        return 0
    else
        data=string.sub(data,2,#data)
        return PokerWeight[data]
    end
end
--发送打牌协议
function MyHandCard.DaPaiUrl(data)
    print(data)
    print("{msg:'action',data:{token:'"..GameInfo.GameToken.."',id:'"..this.HandAction[data].."'}}")
    this.SendMsg("{msg:'action',data:{token:'"..GameInfo.GameToken.."',id:'"..this.HandAction[data].."'}}")
end

--发送摸牌协议
function MyHandCard.ActionUrl(id)
    print("{msg:'action',data:{token:'"..GameInfo.GameToken.."',id:'"..id.."'}}")
    this.SendMsg("{msg:'action',data:{token:'"..GameInfo.GameToken.."',id:'"..id.."'}}")
end
--摸牌协议处理
function MyHandCard.MoPaiHttpHnadle(data)
    log("<color>=#ffff00ff"..data.text.."</color>")
end
--初始化
function MyHandCard.InitOptions()
    this.pengdisabledByHigherPriorityAction=false
    this.gangdisabledByHigherPriorityAction=false
    this.hudisabledByHigherPriorityAction=false
    this.guodisabledByHigherPriorityAction=false
    this.pengid=nil
    this.gangid=nil
    this.huid=nil
    this.quxiaoid=nil
    this.pengName=nil
    this.gangName=nil
    this.PengPlayerId=nil
    this.GangPlayerId=nil
end
--隐藏吃碰杠操作
function MyHandCard.InitCenterOptions()
    GamePanel.huOptions.gameObject:SetActive(false)
    GamePanel.pengOptions.gameObject:SetActive(false)
    GamePanel.gangOptions.gameObject:SetActive(false)
    GamePanel.quxiaoOptions.gameObject:SetActive(false)
end
--处理toaction
function  MyHandCard.HandToAction(data)
    this.InitOptions()
    this.InitCenterOptions()
    --此时无任何操作
    if #data<=0 then
        this.InitOptions()
        return nil
    end
    StartGame.ShowTurnTable(PlayerInfo.MemberId)
    --如果 数据只有一个且是碰 杠 胡 中的一个 则代表自动 吃碰杠
    if #data==1 then
        if data[1].type=="peng" then
            this.peng(data[1].pai,data[1].Id,data[1].dachupaiPlayerId)
            return nil
        elseif data[1].type=="gang" then
            this.gang(data[1].pai,data[1].Id,data[1].dachupaiPlayerId)
            return nil
        elseif data[1].type=="hu" then
            this.hu(data[1].Id)
            return nil
        end
    end
    local isShowOptions=false
    --显示操作
    for i,v in pairs(data) do
        if v.type=="mo"then
            this.CurrentState=this.State.mo
            this.ActionUrl(v.id)
        elseif v.type=="da" then
            this.CurrentState=this.State.da
            this.HandAction["m"..v.pai]=v.id
            if not this.isxiaPao then
                this.SetFirst()
            end
        elseif v.type=="peng" then
            isShowOptions=true
            GamePanel.pengOptions.gameObject:SetActive(true)
            this.pengdisabledByHigherPriorityAction=v.disabledByHigherPriorityAction
            this.pengid=v.id
            this.pengName=v.pai
            this.PengPlayerId=v.dachupaiPlayerId
        elseif v.type=="gang" then
            isShowOptions=true
            GamePanel.gangOptions.gameObject:SetActive(true)
            this.gangdisabledByHigherPriorityAction=v.disabledByHigherPriorityAction
            this.gangid=v.id
            this.gangName=v.pai
            this.GangPlayerId=v.dachupaiPlayerId
        elseif v.type=="hu" then
            isShowOptions=true
            GamePanel.huOptions.gameObject:SetActive(true)
            this.hudisabledByHigherPriorityAction=v.disabledByHigherPriorityAction
            this.huid=v.id
        elseif v.type=="guo" then
            isShowOptions=true
            GamePanel.quxiaoOptions.gameObject:SetActive(true)
            this.guodisabledByHigherPriorityAction=v.disabledByHigherPriorityAction
            this.quxiaoid=v.id
        end
    end
    --创建操作表
    if isShowOptions then
        currentGameType=GameProcess.GameCaoZuo
        this.CreateOptionTable()
    end
end
--创建下炮表
function MyHandCard.CreateXiaPaoTable()
    this.StartJianCe()
    this.isxiaPao=true
    GamePanel.XiaPao.gameObject:SetActive(true)
    this.xiaPaoOne=ButtonBase:New(GamePanel.XiaPaoOne)
    this.xiaPaoTwo=ButtonBase:New(GamePanel.XiaPaoTwo)
    this.XiaPaoThree=ButtonBase:New(GamePanel.XiaPaoThree)
    this.xiaPaoCancle=ButtonBase:New(GamePanel.XiaPaoCancle)

    --上下左右表
    this.xiaPaoOne.right=this.xiaPaoTwo
    this.xiaPaoTwo.right=this.XiaPaoThree
    this.XiaPaoThree.right=this.xiaPaoCancle

    this.xiaPaoTwo.left=this.xiaPaoOne
    this.xiaPaoCancle.left=this.XiaPaoThree
    this.XiaPaoThree.left=this.xiaPaoTwo
    --设置ok函数
    this.xiaPaoOne.okFunc=function(one)
        this.XiaPaoUrl(one.gameObject.name)
    end

    this.xiaPaoTwo.okFunc=function(one)
        this.XiaPaoUrl(one.gameObject.name)
    end

    this.XiaPaoThree.okFunc=function(one)
        this.XiaPaoUrl(one.gameObject.name)
    end

    this.xiaPaoCancle.okFunc=function(one)
        this.XiaPaoUrl(one.gameObject.name)
    end
    this.xiaPaoOne:SetStart()
end

function MyHandCard.StartJianCe()
    --推荐使用这种Update方法
    XiaPaoUpdateHandle=UpdateBeat:CreateListener(this.XiaPaoJianCe,self)
    UpdateBeat:AddListener(XiaPaoUpdateHandle)
end
function MyHandCard.XiaPaoJianCe()
    time=time+UnityEngine.Time.deltaTime
    if time>=15 then
        time=0
        this.XiaPaoUrl("guo")
    end
end
--移除按键检测
function MyHandCard.RemoveXiaPaoJianCe()
    UpdateBeat:RemoveListener(XiaPaoUpdateHandle)
end
--发送下跑协议
function MyHandCard.XiaPaoUrl(score)
    this.isxiaPao=false
    GamePanel.XiaPao.gameObject:SetActive(false)
    time=0
    this.RemoveXiaPaoJianCe()
    this.SetFirst()
    print("{msg:'xiapao',data:{token:'"..GameInfo.GameToken.."',xiapao:'"..score.."'}}")
    this.SendMsg("{msg:'xiapao',data:{token:'"..GameInfo.GameToken.."',xiapao:'"..score.."'}}")
end
--创建操作表
function MyHandCard.CreateOptionTable()
    this.OptionsTable={}
    for i=1,GamePanel.Options.childCount,1 do
        local obj=GamePanel.Options:GetChild(i-1).gameObject
        if obj.activeSelf then
            table.insert(this.OptionsTable,ButtonBase:New(obj))
        end
    end
    --设置上下左右表
    for i=1,#this.OptionsTable,1 do
        if i==1 then
            this.OptionsTable[i].right=  this.OptionsTable[i+1]
        elseif i==#this.OptionsTable then
            this.OptionsTable[i].left=  this.OptionsTable[i-1]
        else
            this.OptionsTable[i].right=  this.OptionsTable[i+1]
            this.OptionsTable[i].left=  this.OptionsTable[i-1]
        end
        this.OptionsTable[i].okFunc=this.OptionsTableOkFunc
    end
    this.SetFirst()
end
--操作吃 碰 杠
function MyHandCard.OptionsTableOkFunc(button)
    if button.gameObject.name=="peng" then
        this.peng(this.pengName,this.pengid,this.PengPlayerId)
    elseif button.gameObject.name=="gang" then
        this.gang(this.gangName,this.gangid,this.GangPlayerId)
    elseif button.gameObject.name=="hu" then
        this.hu(this.huid)
    elseif button.gameObject.name=="quxiao" then
        this.Cancle(this.quxiaoid)
    end
end
--显示打牌动画
function MyHandCard.ShowAnimation(data)
    local f= coroutine.create(function ()
        GamePanel.MDaAnimation.gameObject:SetActive(true)
        GamePanel.MDaAnimation.transform:Find("Sprite"):GetComponent("UISprite").spriteName=data
        GamePanel.MDaAnimation:GetComponent("TweenScale"):PlayForward()
        coroutine.wait(0.5)
        GamePanel.MDaAnimation.gameObject:SetActive(false)
        this.ShowDaChuCard(data)
    end)
    coroutine.resume(f)
end

--发送action协议
function MyHandCard.SendMsg(url)
    gameWebSocket:SendMsg(url)
end
--对象池回收打出牌
function MyHandCard.HuiShouDaChu()
    for i=1, GamePanel.MChu.transform.childCount,1 do
        objPoolMgr:Release(GameCtrl.DaChuPaiPoolName,GamePanel.MChu.transform:GetChild(i-1).gameObject)
    end
end

--对象池回收吃碰
function MyHandCard.HuiShouChiPeng()
    for i=1, GamePanel.MPeng.transform.childCount,1 do
        objPoolMgr:Release(GameCtrl.MyPengPoolName,GamePanel.MPeng.transform:GetChild(i-1).gameObject)
    end
end
--对象池回收吃碰
function MyHandCard.HandShouPai()
    for i=1, GamePanel.MHand.transform.childCount,1 do
        objPoolMgr:Release(GameCtrl.MyMaJiangPoolName,GamePanel.MHand.transform:GetChild(i-1).gameObject)
    end
end


--处理panforme 操作
function  MyHandCard.HandPanForMe(data)
    if data.type=="peng" then
        GamePanel.MoAnimation:PlayAnimationByName("peng")
    elseif data.type=="gang" then
        GamePanel.MoAnimation:PlayAnimationByName("gang")
    elseif data.type=="hu" then
        GamePanel.MoAnimation:PlayAnimationByName("hu")
    end
end
--碰杠胡操作

--      SendMsg("{msg:'bindPlayer',data:{token:'" + GameToken + "',gameId:'" + GameId + "'}}");
