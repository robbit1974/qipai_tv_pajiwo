//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameSocketWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameSocket), typeof(Manager));
		L.RegFunction("SendMsg", SendMsg);
		L.RegFunction("CloseWeb", CloseWeb);
		L.RegFunction("BindPlayer", BindPlayer);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("webSocket", get_webSocket, set_webSocket);
		L.RegVar("MIsStartSocket", null, set_MIsStartSocket);
		L.RegVar("MIsSendHeatBeat", null, set_MIsSendHeatBeat);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendMsg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameSocket obj = (GameSocket)ToLua.CheckObject<GameSocket>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.SendMsg(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CloseWeb(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameSocket obj = (GameSocket)ToLua.CheckObject<GameSocket>(L, 1);
			obj.CloseWeb();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BindPlayer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GameSocket obj = (GameSocket)ToLua.CheckObject<GameSocket>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.BindPlayer(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_webSocket(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameSocket obj = (GameSocket)o;
			BestHTTP.WebSocket.WebSocket ret = obj.webSocket;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index webSocket on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_webSocket(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameSocket obj = (GameSocket)o;
			BestHTTP.WebSocket.WebSocket arg0 = (BestHTTP.WebSocket.WebSocket)ToLua.CheckObject(L, 2, typeof(BestHTTP.WebSocket.WebSocket));
			obj.webSocket = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index webSocket on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MIsStartSocket(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameSocket obj = (GameSocket)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.MIsStartSocket = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index MIsStartSocket on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MIsSendHeatBeat(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameSocket obj = (GameSocket)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.MIsSendHeatBeat = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index MIsSendHeatBeat on a nil value");
		}
	}
}

