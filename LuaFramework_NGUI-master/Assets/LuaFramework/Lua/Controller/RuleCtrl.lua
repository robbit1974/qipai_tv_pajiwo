---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2019/6/24 14:53
---
-----------------------------------------------初始化参数--------------------------------------------------------------
local gameobject
local transform
RuleCtrl={}
local this=RuleCtrl
local BaseMinY=360
local BaseMaxY=360
local MultiplicationMinY=360
local MultiplicationMaxY=800
local mSliderValue=60
-----------------------------------------------初始化方法--------------------------------------------------------------
function RuleCtrl.New()
    logWarn("RuleCtrl.New--->>");
    return this;
end

function  RuleCtrl.Awake()
    logWarn("RuleCtrl.Awake--->>");
    panelMgr:CreatePanel('Rule', this.OnCreate);
end

function RuleCtrl.OnCreate(obj)
    gameobject=obj
    transform=obj.transform
    --this.InitUI()
    this.CreateBtn()
    -- 设置第一个高亮
    this.SetFirstBtn()

end
-----------------------------------------------内置函数--------------------------------------------------------------
function RuleCtrl.CreateBtn()
    this.BaseRuleBtn=ButtonBase:New(RulePanel.BaseRule)
    this.MultiplicationRuleBtn=ButtonBase:New(RulePanel.MultiplicationRule)
    this.ReturndBtn=ButtonBase:New(RulePanel.Return)
    ----设置左右上下表,
    this.SetTable()
    --设置上下方法
    this.SetRuleBtnStartFun()
    --设置确定函数
    this.SetRuleBtnOkFun()
end

function RuleCtrl.SetTable()
    this.BaseRuleBtn:SetRight(this.MultiplicationRuleBtn)
    this.MultiplicationRuleBtn:SetRight(this.ReturndBtn)
    this.MultiplicationRuleBtn:SetLeft(this.BaseRuleBtn)
    this.ReturndBtn:SetLeft(this.MultiplicationRuleBtn)
end
-- 滑动功能
function RuleCtrl.SetRuleBtnStartFun()
    this.BaseRuleBtn.startFunc=function()
        --本身开始函数
        this.BaseRuleBtn:SetStartFunc()
        --重新赋值坐标
        RulePanel.BaseRuleGoSlider.localPosition=Vector3.New( RulePanel.BaseRuleGoSlider.localPosition.x,BaseMinY, RulePanel.BaseRuleGoSlider.localPosition.z)
        --显示
        RulePanel.BaseRuleGo.gameObject:SetActive(true)
        --隐藏其他规则
        RulePanel.MultiplicationRuleGo.gameObject:SetActive(false)
    end
    this.MultiplicationRuleBtn.startFunc=function()
        this.MultiplicationRuleBtn:SetStartFunc()
        RulePanel.MultiplicationRuleGoSlider.localPosition=Vector3.New( RulePanel.MultiplicationRuleGoSlider.localPosition.x,BaseMinY, RulePanel.MultiplicationRuleGoSlider.localPosition.z)
        RulePanel.MultiplicationRuleGo.gameObject:SetActive(true)
        RulePanel.BaseRuleGo.gameObject:SetActive(false)
    end
    this.BaseRuleBtn.upFunc=function()
        --Y 值以固定的方式增长或减少,不能超过一定范围
        this.SetSlide(RulePanel.BaseRuleGoSlider,-mSliderValue,BaseMinY,BaseMaxY)
    end
    this.BaseRuleBtn.downFunc=function()
        this.SetSlide(RulePanel.BaseRuleGoSlider,mSliderValue,BaseMinY,BaseMaxY)
    end
    this.MultiplicationRuleBtn.upFunc=function()
        this.SetSlide(RulePanel.MultiplicationRuleGoSlider,-mSliderValue,MultiplicationMinY,MultiplicationMaxY)
    end
    this.MultiplicationRuleBtn.downFunc=function()
        this.SetSlide(RulePanel.MultiplicationRuleGoSlider,mSliderValue,MultiplicationMinY,MultiplicationMaxY)
    end
end

function RuleCtrl.SetRuleBtnOkFun()
    this.ReturndBtn.okFunc=function()
        this.BaseRuleBtn=nil
        this.MultiplicationRuleBtn=nil
        this.ReturndBtn=nil
        this.Close()
        gameobject=nil
        transform=nil
        SignInCtrl.SetFirstBtn()
    end
end
--设置第一个按钮
function RuleCtrl.SetFirstBtn()
    this.BaseRuleBtn:SetStart()
end
---设置边界值
function RuleCtrl.SetSlide(Go,SlideValue,MinY,MaxY)
    local pos=Go.transform
    --没有超过边界值
    if pos.localPosition.y>MinY-mSliderValue and pos.localPosition.y<MaxY+mSliderValue then
        local y=pos.localPosition.y+SlideValue
        --三目运算
        y=y>MaxY and MaxY or y
        y=y<MinY and MinY or y
        pos.localPosition=Vector3.New(pos.localPosition.x,y,pos.localPosition.z)
    end
end

--关闭事件--
function RuleCtrl.Close()
    panelMgr:ClosePanel(CloseNames.Rule);
end