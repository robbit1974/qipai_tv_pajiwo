---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2019/7/17 10:50
---
----这个类与GameCtrl 有很高的耦合性,可以看做一个脚本,强行拆分为两个,防止单个脚本代码量过高,导致维护困难,  缺点是耦合性过高 建议优化
local cjson=require "cjson"
StartGame={}
local this=StartGame
this.HandSpriteName={}
--赋值
this.GuiPai=nil



this.OtherHand={}
---------------处理游戏开始后的websocket消息
function StartGame.HnadPanForMe(data)
    this.OtherHand["L"]=BaseOtherHnad:New(GamePanel.LHand,GameCtrl.LeftChiPoolName,GameCtrl.LDaChuPaiPoolName,-65,-180,false,0)
    this.OtherHand["T"]=BaseOtherHnad:New(GamePanel.THand,GameCtrl.TopPengPoolName,GameCtrl.TDaChuPaiPoolName,-500,0,false,180)
    this.OtherHand["R"]=BaseOtherHnad:New(GamePanel.RHand,GameCtrl.RightChiPengPoolName,GameCtrl.RDaChuPaiPoolName,-70,180,true,0)
    if  data.data.panforme.no==1  then
        --表示第一次开始,需要交换位置, 准备和开始是两套坐标
        this.SetPanForMe(data.data.panforme.panAfterAction.playerList,true)
    else
        this.SetPanForMe(data.data.panforme.panAfterAction.playerList,false)
    end
    --手牌赋值
    for i,v in pairs(data.data.panforme.panAfterAction.playerList) do
        if v and v.id==PlayerInfo.MemberId then
            MyHandCard.GetInfo(v,data.data.panforme.panAfterAction.publicGuipaiList)
        else
            --正确代码
            this.OtherHand[GameCtrl.Players[v.id].pos]:ShowHand()
            ----测试
            --this.OtherHand["R"]:ShowHand()

        end
    end
    for i,v in pairs(GameCtrl.Players) do
        if v.pos=="L" then
            this.OtherHand["L"].id=i
        elseif v.pos=="R" then
            this.OtherHand["R"].id=i
        elseif v.pos=="T" then
            this.OtherHand["T"].id=i
        end
    end
    --当前动作,如果个人是"mo"动作,直接在手牌赋时,通过判断gangmoshoupai集合可以判断是否是摸牌,这里不再做判断
    if data.data.panforme.action.actionPlayerId==PlayerInfo.MemberId then
          MyHandCard.HandPanForMe(data.data.panforme.action)
    else
        this.OtherHand[GameCtrl.Players[data.data.panforme.action.actionPlayerId].pos]:ShowPanForMeAction(data.data.panforme.action)
    end
    --显示桌布
    this.InitTurnTable(GameCtrl.MyFeng)
    --轮转
    this.ShowTurnTable(data.data.panforme.action.actionPlayerId)
    --显示混牌和剩余牌数
    this.ShowHunPaiAndShengYu(data.data.panforme.panAfterAction.publicGuipaiList[1],data.data.panforme.panAfterAction.avaliablePaiList)
end

function StartGame.ShowHunPaiAndShengYu(data,count)
    --GamePanel.TopLeftAnchor.gameObject:SetActive(true)
    --GamePanel.TopHunPai.spriteName="m"..data
    --GamePanel.ShengYuCount.text=count
end

function StartGame.UpdateShengYuCount()
    local x=tonumber(GamePanel.ShengYuCount.text)-1
    GamePanel.ShengYuCount.text=x
end
--回收手牌
function StartGame.HuiShowChu(id)
    if id==PlayerInfo.MemberId then
        MyHandCard.HuiShouPai()
    else
        this.OtherHand[GameCtrl.Players[id].pos]:HuiShouPai()
    end
end
--玩家动作处理
function StartGame.HandPlayerAction(data)
    --正确代码
    if data.playerAction.type=="mo" then
        this.UpdateShengYuCount()
    end
    this.OtherHand[GameCtrl.Players[data.playerAction.actionPlayerId].pos]:HandPlayerAction(data.playerAction)
    this.ShowTurnTable(data.playerAction.actionPlayerId)
    ----测试
    --this.OtherHand["R"]:HandPlayerAction(data.playerAction)
end
--玩家可以动作处理
function StartGame.HandToAction(data)
    for i,v in pairs(data.toAction) do
        MyHandCard.HandToAction(v)
    end
end
--panforme 头像赋值赋值
function StartGame.SetPanForMe(playerList, isFirst)
    --隐藏头像
    GameCtrl.PlayerInfos["T"]:SetGo(false)
    GameCtrl.PlayerInfos["L"]:SetGo(false)
    GameCtrl.PlayerInfos["R"]:SetGo(false)
    --保存位置,并开始播放动画
    GameCtrl.DeterminePos(playerList)
    GameCtrl.SetHeadInfoByStartGame(isFirst)
end

--local pos={dong=0,nan=1,xi=2,bei=3}--便于计算
local menFneg={
    ["dong"]="One",
    ["nan"]="Two",
    ["xi"]="Three",
    ["bei"]="Four",
}
function StartGame.InitTurnTable(MyFeng)
    local s=menFneg[MyFeng]
    GamePanel.Time.gameObject:SetActive(true)
    GamePanel.Di.transform:GetChild(0):GetComponent("UISprite").spriteName=s.."DiEast"
    GamePanel.Di.transform:GetChild(1):GetComponent("UISprite").spriteName=s.."DiWest"
    GamePanel.Di.transform:GetChild(2):GetComponent("UISprite").spriteName=s.."DiSouth"
    GamePanel.Di.transform:GetChild(3):GetComponent("UISprite").spriteName=s.."DiNorth"
    --对应图片的名字,图片资源的名字不能修改,否则会出错,
    GamePanel.Liang.transform:GetChild(0):GetComponent("UISprite").spriteName=s.."East"
    GamePanel.Liang.transform:GetChild(2):GetComponent("UISprite").spriteName=s.."West"
    GamePanel.Liang.transform:GetChild(1):GetComponent("UISprite").spriteName=s.."South"
    GamePanel.Liang.transform:GetChild(3):GetComponent("UISprite").spriteName=s.."North"
end

--显示转盘
function StartGame.ShowTurnTable(id)
    for i=1,4,1 do
        GamePanel.Liang.transform:GetChild(i-1).gameObject:SetActive(false)
    end
    if id==PlayerInfo.MemberId then
        GamePanel.Liang.transform:GetChild(0).gameObject:SetActive(true)
    elseif GameCtrl.Players[id].pos=="T"then
        GamePanel.Liang.transform:GetChild(2).gameObject:SetActive(true)
    elseif GameCtrl.Players[id].pos=="R"then
        GamePanel.Liang.transform:GetChild(1).gameObject:SetActive(true)
    elseif GameCtrl.Players[id].pos=="L"then
        GamePanel.Liang.transform:GetChild(3).gameObject:SetActive(true)
    end
end
