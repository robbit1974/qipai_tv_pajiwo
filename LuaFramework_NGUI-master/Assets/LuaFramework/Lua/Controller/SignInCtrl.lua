---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2019/6/24 14:53
---
require "Logic/TV_KeyCode"
local cjson=require "cjson"
---------------------------------------初始值----------------------------------------------------------------------------
local gameobject
local transform
SignInCtrl={}
local this=SignInCtrl
local getInfoUrl="/app/acgw/level/getUserLevelPlus"
local createRoomUrl=":2000/ggw/game/join_zzmj_room"
----------------------------------------初始函数------------------------------------------------------------------------
function SignInCtrl.New()
    logWarn("SignInCtrl.New--->>");
    return this;
end

function  SignInCtrl.Awake()
    logWarn("SignInCtrl.Awake--->>");
    --当前在大厅
    currentGameType=GameProcess.DaTing
    panelMgr:CreatePanel('SignIn', this.OnCreate);
end

function SignInCtrl.OnCreate(obj)
    logWarn("SignInCtrl.Create--->>");
    gameobject=obj
    transform=obj.transform
    this.GetInfoFromService()
    this.CreateBtn()
    this.SetFirstBtn(this.ZhengZhouMaJiangBtn)
end
------------------------------------------------服务器数据请求-------------------------------------------------------------------------
--请求基本信息
function SignInCtrl.GetInfoFromService()
    local url=LocalHallHttpPort..getInfoUrl.."?token="..PlayerInfo.GameToken.."&id="..PlayerInfo.MemberId
    log("大厅基本信息"..url)
    Http_Helper.WebRequestText(url,this.SetUiValue)
end
---创建房间
function SignInCtrl:CreateRoomByService()
    local url=LocalHallHttpPort..createRoomUrl.."?token="..PlayerInfo.GameToken
    log("创建房间"..url)
    Http_Helper.WebRequestText(url,this.CreateRoomHandleInfo)
end
------------------------------------------------数据回调------------------------------------------------------------------------------
--根据服务器数据赋值UI
function SignInCtrl.SetUiValue(data)
    log(data.text)
    local Jsondata=cjson.decode(data.text)
    if Jsondata.success then
        --Id
        SignInPanel.IdLabelInfo.text="[b]"..PlayerInfo.MemberId;
        --经验
        SignInPanel.ExperienceBgInfo.text="[b]"..Jsondata.data.userLevel.experience
        --等级
        SignInPanel.LevelLabelInfo.text="[b]"..Jsondata.data.userLevel.level.name
        --当前等级
        SignInPanel.CurrentLabel.text="[b]"..Jsondata.data.userLevel.level.name

        print(Jsondata.data.userLevel.level.headImg)
        PlayerInfo.MyHeadUrl=Jsondata.data.userLevel.level.headImg
        PlayerInfo.MyName=Jsondata.data.userLevel.level.name
        --头像
        setWeChatHead:SetAsyncImage(PlayerInfo.MyHeadUrl,SignInPanel.HeadTex)
        if Jsondata.data.nextLevel==cjson.null then
            SignInPanel.ExeSlider.value=1
            SignInPanel.NextLabel.text="[b]Max"
            SignInPanel.AllExperience.text="[b]"..Jsondata.data.userLevel.level.experience
            SignInPanel.NextTitleInfo.text="[b]0"
        else
            SignInPanel.NextLabel.text="[b]"..Jsondata.data.nextLevel.name
            SignInPanel.AllExperience.text="[b]"..Jsondata.data.nextLevel.experience
            SignInPanel.NextTitleInfo.text="[b]"..(Jsondata.data.nextLevel.experience-Jsondata.data.userLevel.experience)
            SignInPanel.ExeSlider.value=Jsondata.data.userLevel.experience/Jsondata.data.nextLevel.experience
        end
    else
        log("获取大厅数据出错"..Jsondata.msg)
    end
end
---创建房间回调
function SignInCtrl.CreateRoomHandleInfo(data)
    log(data.text)
    local Jsondata=cjson.decode(data.text)
    if  Jsondata.success then
        -----游戏基础信息赋值
        AppConst.GameSocketPort=Jsondata.data.wsUrl
        AppConst.GameUserToken=Jsondata.data.token
        GameInfo.GameId=Jsondata.data.gameId
        GameInfo.GameToken=Jsondata.data.token
        GameInfo.GameType=Jsondata.data.game
        LocalGameHttpPort=Jsondata.data.httpUrl
        ---开始连接socket
        gameWebSocket.MIsStartSocket=true
        local ctrl = CtrlManager.GetCtrl(CtrlNames.Game);
        --一定要在赋值之后创建场景,需要其中的值
        if ctrl ~= nil then
            ctrl:Awake();
            this.Close()
        end
    else
        log("获取创建房间数据出错"..Jsondata.msg)
    end
end
------------------------------------------------内部函数--------------------------------------------------------------------------------------

--初始按钮生成  面向对象ButtonBase为所有的基类
function SignInCtrl.CreateBtn()
    this.ZhengZhouMaJiangBtn=ButtonBase:New(SignInPanel.ZhengZhowMaJiang)
    --快速开始
    this.KuaiSuKaiShiBtn=ButtonBase:New(SignInPanel.KuaiSuKaiShi)
    --签到
    this.QianDaoBtn=ButtonBase:New(SignInPanel.QianDao)
    --战绩
    this.RecordBtn=ButtonBase:New(SignInPanel.Record)
    --规则
    this.RuleBtn=ButtonBase:New(SignInPanel.Rule)
    --设置
    this.SettingBtn=ButtonBase:New(SignInPanel.Setting)
    --退出
    this.QuitGameBtn=ButtonBase:New(SignInPanel.QuitGame)
    ----设置左右上下表,
    this.SetTable()
    --设置确定函数
    this.SetDaTingBtnOkFun()
end
--设置左右上下表
function SignInCtrl.SetTable()
    --郑州麻将
    this.ZhengZhouMaJiangBtn:SetAllTable(nil,this.KuaiSuKaiShiBtn,nil,nil)
    --快速开始
    this.KuaiSuKaiShiBtn:SetAllTable(this.ZhengZhouMaJiangBtn,this.QianDaoBtn,nil,nil)
    --签到
    this.QianDaoBtn:SetAllTable(this.KuaiSuKaiShiBtn,nil,nil,this.RecordBtn)
    --战绩
    this.RecordBtn:SetAllTable(this.KuaiSuKaiShiBtn,nil,this.QianDaoBtn,this.RuleBtn)
    --规则
    this.RuleBtn:SetAllTable(this.KuaiSuKaiShiBtn,nil,this.RecordBtn,this.SettingBtn)
    --设置
    this.SettingBtn:SetAllTable(this.KuaiSuKaiShiBtn,nil,this.RuleBtn,this.QuitGameBtn)
    --退出\
    this.QuitGameBtn:SetAllTable(this.KuaiSuKaiShiBtn,nil,this.SettingBtn,nil)
end
--设置Ok按钮函数
function SignInCtrl.SetDaTingBtnOkFun()
    this.ZhengZhouMaJiangBtn.okFunc=function()
        --快速开始
        this.CreateRoomByService()
    end
    this.KuaiSuKaiShiBtn.okFunc=function()
        --快速开始
       this.CreateRoomByService()
    end
    --签到
    this.QianDaoBtn.okFunc=function()
        -- 生成签到界面
        local ctrl = CtrlManager.GetCtrl(CtrlNames.QianDao);
        if ctrl ~= nil then
            ctrl:Awake();
        end
    end
    --战绩
    this.RecordBtn.okFunc=function()
        -- 生成战绩界面
        local ctrl = CtrlManager.GetCtrl(CtrlNames.Record);
        if ctrl ~= nil then
            ctrl:Awake();
        end
    end
    --规则
    this.RuleBtn.okFunc=function()
        -- 生成规则界面
        local ctrl = CtrlManager.GetCtrl(CtrlNames.Rule);
        if ctrl ~= nil then
            ctrl:Awake();
        end
    end
    --设置
    this.SettingBtn.okFunc=function()
        -- 生成设置界面
        local ctrl = CtrlManager.GetCtrl(CtrlNames.Setting);
        if ctrl ~= nil then
            ctrl:Awake();
        end
    end
    --退出\
    this.QuitGameBtn.okFunc=function()
        --退出
      CtrlManager.GetCtrl(CtrlNames.Message).QuitGame()
    end
end

function SignInCtrl.DestroyObj()
    gameobject=nil
    transform=nil
    this.ZhengZhouMaJiangBtn=nil
    this.KuaiSuKaiShiBtn=nil
    this.QianDaoBtn=nil
    this.RecordBtn=nil
    this.RuleBtn=nil
    this.SettingBtn=nil
    this.QuitGameBtn=nil
    this.Close()
end
--开始设置首个按钮
function SignInCtrl.SetFirstBtn()
    this.ZhengZhouMaJiangBtn:SetStart()
end

function SignInCtrl.Close()
    panelMgr:ClosePanel(CloseNames.SignIn);
end